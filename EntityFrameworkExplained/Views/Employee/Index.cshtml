@model EntityFrameworkExplained.ViewModels.EmployeeAddViewModel

@{ 

}

<div>
    @*@using (Html.BeginForm("Index", "Employee", new { onsubmit = "return validateForm();" }, FormMethod.Post))*@
    @*@using (Html.BeginForm(new { onsubmit = "return validateForm();" }))*@

    <form asp-controller="Employee" asp-action="Index" onsubmit="return validateForm()">
        <table>
            <tr>
                <td>@Html.LabelFor(Model => Model.Name)</td>
                <td>@Html.TextBoxFor(Model => Model.Name)</td>
                <td>
                    <span id="validationName" asp-validation-for="Name"
                          style="color:red"></span>
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(Model => Model.Designation)</td>
                <td>@Html.TextBoxFor(Model => Model.Designation)</td>
                <td>
                    <span id="validationDesignation" asp-validation-for="Designation"
                          style="color:red"></span>
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(Model => Model.Salary)</td>
                <td>@Html.TextBoxFor(Model => Model.Salary)</td>
                <td>
                    <span id="validationSalary" asp-validation-for="Salary"
                          style="color:red"></span>
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    <input type="submit" id="submitButton" value="Submit" />
                </td>
            </tr>
        </table>
    </form>
</div>

<br /><br /><br />

<b>List of employees:</b><br />
<div>
    <table border="1">
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Designation</th>
            <th>Salary</th>
        </tr>
        @foreach(var employee in Model.EmployeesList)
        {
            <tr>
                <td>@employee.EmployeeId</td>
                <td>@employee.Name</td>
                <td>@employee.Designation</td>
                <td>@employee.Salary</td>
            </tr>
        }
    </table>
</div>

@*<script type="text/javascript">

    function validateForm()
    {
        var isValidForm = true;
        var nameValue = document.getElementById("Name").value;
        var designationValue =
            document.getElementById("Designation").value;
        var salaryValue = document.getElementById("Salary").value;

        //Validate the name field
        if (nameValue == null || nameValue == "")
        {
            document.getElementById("validationName").textContent =
                "Employee name is required - from client side!";
            isValidForm = false;
        }

        //Validate the designation field
        if (designationValue == null || designationValue == "")
        {
            document.getElementById("validationDesignation").textContent =
                "Employee Designation is required - from client side!";
            isValidForm = false;
        } else if (!(/^[A-za-z]+(?:\s[A-za-z]+)+$/.test(designationValue)))
        {
            document.getElementById("validationDesignation").textContent =
                "Employee Designation must be at least two words - from client side!";
            isValidForm = false;
        }

        //Validate the salary field - if it is empty
        if (salaryValue == null || salaryValue == "")
        {
            document.getElementById("validationSalary").textContent =
                "Employee Salary is required - from client side!";
            isValidForm = false;
        } else if (Number(salaryValue) == Nan || Number(salaryValue) <= 0.0)
        {
            document.getElementById("validationSalary").textContent =
                "Please enter valid number for salary field - from client side!";
            isValidForm = false;
        }

        return isValidForm;
    }


</script>*@